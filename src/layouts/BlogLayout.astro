---
import Layout from "../layouts/Layout.astro";

export interface Props {
  frontmatter: {
    title: string;
    author: string;
    description: string;
  };
}
const { frontmatter } = Astro.props;
---

<Layout title={frontmatter.title} desc={frontmatter.description} currentPage="/blog">
  <article class="markdown">
    <slot />
  </article>
  <script>
    const copySVG = `<svg width="1.3em" height="1.3em" viewBox="0 0 256 256"><path fill="currentColor" d="M216 36H88a4 4 0 0 0-4 4v44H40a4 4 0 0 0-4 4v128a4 4 0 0 0 4 4h128a4 4 0 0 0 4-4v-44h44a4 4 0 0 0 4-4V40a4 4 0 0 0-4-4Zm-52 176H44V92h120Zm48-48h-40V88a4 4 0 0 0-4-4H92V44h120Z"/></svg>`;

    const blocks = document.querySelectorAll("pre");
    blocks.forEach((block) => {
      const copyButton = document.createElement("button");
      copyButton.className =
        "inline absolute right-1.5 top-1.5 bg-zinc-100/20 rounded p-1 text-sm hover:bg-zinc-100/25";
      copyButton.innerHTML = copySVG;
      copyButton.addEventListener("click", () => {
        let text = "";
        const pre = copyButton.parentElement;
        const code = pre?.querySelector("code");
        if (code) {
          text = code.innerText;
        } else {
          const span = pre?.querySelector("span");
          if (span) {
            text = span.innerText;
          }
        }
        if (text) {
          try {
            navigator.clipboard.writeText(text);
          } catch (err) {
            console.error("Failed to copy: ", err);
          }
          copyButton.innerHTML = `<svg width="1.3em" height="1.3em" viewBox="0 0 256 256"><path class="fill-green-500" d="M104 192a8.5 8.5 0 0 1-5.7-2.3l-56-56a8.1 8.1 0 0 1 11.4-11.4l50.3 50.4L210.3 66.3a8.1 8.1 0 0 1 11.4 11.4l-112 112a8.5 8.5 0 0 1-5.7 2.3Z"/></svg>`;

          setTimeout(() => {
            copyButton.innerHTML = copySVG;
          }, 1000);
        }
      });

      block.appendChild(copyButton);
      block.setAttribute("tabindex", "-1");
    });
  </script>
  <script defer>
    const matches = document.querySelectorAll("[data-heading-link]");
    if (matches && matches.length) {
      matches.forEach((elem) => {
        const href = elem.href;
        elem.addEventListener(
          "click",
          () => {
            navigator.clipboard.writeText(href);
          },
          false
        );
      });
    }
  </script>
</Layout>
